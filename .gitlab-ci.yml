# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.8

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python --version  # For debugging
  - git --version
  - pip install --upgrade pip virtualenv
  - virtualenv venv
  - source venv/bin/activate

test:
  script:
    - pip install coverage flake8 flake8-docstrings flake8-import-order pytest setuptools wheel PyYAML
    - python setup.py install
    - git config --global --add init.defaultBranch master
    - git config --global --add advice.detachedHead true
    - pytest -s -v test

push-gitlab:
  when: manual
  allow_failure: true
  script:
    - make distro
    - pip3 install --quiet twine
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python3 -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*

push-cloudsmith:
  when: manual
  allow_failure: true
  script:
    - make distro
    - pip3 install --quiet cloudsmith-cli
    - CLOUDSMITH_API_KEY=${JENKINS_CLOUDSMITH_API_KEY} cloudsmith push python outrider/outrider-python dist/*
